// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc862.Sirius;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.VictorSP;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static SpeedController driveTrainRight1;
    public static SpeedController driveTrainRight2;
    public static SpeedController driveTrainLeft1;
    public static SpeedController driveTrainLeft2;
    public static WPI_TalonSRX shooterLeftFly;
    public static WPI_TalonSRX shooterRightFly;
    public static DoubleSolenoid shooterDoubleSolenoid1;
    public static Compressor coreCompressor1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainRight1 = new VictorSP(0);
        LiveWindow.addActuator("DriveTrain", "Right1", (VictorSP) driveTrainRight1);
        driveTrainRight1.setInverted(false);
        driveTrainRight2 = new VictorSP(1);
        LiveWindow.addActuator("DriveTrain", "Right2", (VictorSP) driveTrainRight2);
        driveTrainRight2.setInverted(false);
        driveTrainLeft1 = new VictorSP(2);
        LiveWindow.addActuator("DriveTrain", "Left1", (VictorSP) driveTrainLeft1);
        driveTrainLeft1.setInverted(false);
        driveTrainLeft2 = new VictorSP(3);
        LiveWindow.addActuator("DriveTrain", "Left2", (VictorSP) driveTrainLeft2);
        driveTrainLeft2.setInverted(false);
        shooterLeftFly = new WPI_TalonSRX(5);
        
        
        shooterRightFly = new WPI_TalonSRX(4);
        
        
        shooterDoubleSolenoid1 = new DoubleSolenoid(11, 2, 3);
        LiveWindow.addActuator("Shooter", "Double Solenoid 1", shooterDoubleSolenoid1);
        
        coreCompressor1 = new Compressor(11);
        LiveWindow.addActuator("Core", "Compressor 1", coreCompressor1);
        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
